{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Users API",
    "description" : "A simple API to create, update, delete and view users",
    "termsOfService" : "faketermsofservice.com",
    "contact" : {
      "name" : "Alex Lewis",
      "url" : "fakeurl.com",
      "email" : "fake@gmail.com"
    },
    "license" : {
      "name" : "licence",
      "url" : "fakelicense.com"
    },
    "version" : "1"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/alexlewis/users-api/1",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "Users",
    "description" : "Information about all of the users."
  }, {
    "name" : "User",
    "description" : "Information about an individual user."
  } ],
  "paths" : {
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Retrieve users from the database",
        "parameters" : [ {
          "name" : "bodyLimit",
          "in" : "query",
          "description" : "The number of users returned per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "example" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "authentication" : [ "read:users" ]
        } ]
      }
    },
    "/user" : {
      "post" : {
        "tags" : [ "User" ],
        "description" : "Add a new user to the database",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created a new user"
          }
        },
        "security" : [ {
          "authentication" : [ "write:users", "read:users" ]
        } ]
      }
    },
    "/user/{id}" : {
      "get" : {
        "tags" : [ "User" ],
        "description" : "Get information about a specific user",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "example" : 25
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/body"
                }
              }
            }
          }
        },
        "security" : [ {
          "authentication" : [ "read:users" ]
        } ]
      },
      "put" : {
        "tags" : [ "User" ],
        "description" : "Update a user's details",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "example" : 25
          }
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "Bart Simpson"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "bart@simpson.com"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated user info",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        },
        "security" : [ {
          "authentication" : [ "write:users", "read:users" ]
        } ]
      },
      "delete" : {
        "tags" : [ "User" ],
        "description" : "Delete a specific user",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "example" : 2
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/body"
                }
              }
            }
          }
        },
        "security" : [ {
          "authentication" : [ "write:users", "read:users" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 4
          },
          "user name" : {
            "type" : "string",
            "example" : "Homer Simpson"
          },
          "email" : {
            "type" : "string",
            "example" : "homer@simpson.com"
          }
        },
        "description" : "User info"
      },
      "body" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        } ]
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 25
          },
          "user name" : {
            "type" : "string",
            "example" : "Bart Simpson"
          },
          "email" : {
            "type" : "string",
            "example" : "bart@simpson.com"
          }
        },
        "description" : "The user"
      }
    },
    "securitySchemes" : {
      "authentication" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "http://fakeauthurl",
            "scopes" : {
              "write:users" : "Modify the details of a user",
              "read:users" : "Read the details of a user(s)"
            }
          }
        }
      }
    }
  }
}